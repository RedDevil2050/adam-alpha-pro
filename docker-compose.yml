# Specify the version of docker-compose

services:
  backend:
    container_name: zion-backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - ENV=development
      - DATABASE_URL=postgresql+asyncpg://user:password@db:5432/app_db # Added DB URL
      - REDIS_URL=redis://redis:6379/0 # Added Redis URL
    depends_on:
      db: # Use service condition for better readiness check
        condition: service_healthy
      redis: # Use service condition for better readiness check
        condition: service_started
    networks:
      - app-network
    command: ["python", "run.py"]

  frontend:
    container_name: zion-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    networks:
      - app-network

  db:
    container_name: zion-db
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck: # Added healthcheck for Postgres
      test: ["CMD-SHELL", "pg_isready -U user -d app_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: zion-redis
    image: redis:6.2
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - app-network
    volumes:
      - redis_data:/data
    healthcheck: # Added healthcheck for Redis
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
  redis_data: {} # Define the redis volume

networks:
  app-network:
    driver: bridge